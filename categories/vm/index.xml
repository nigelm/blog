<?xml version="1.0" encoding="utf-8" ?>
<?xml-stylesheet type="text/xsl" href="https://blog.dotdot.cloud/xml/base.min.xml" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>vm on Nailing Jelly</title>
    <link>https://blog.dotdot.cloud/categories/vm/</link>
    <description>Recent content in vm on Nailing Jelly</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 31 Mar 2007 09:27:00 +0000</lastBuildDate>
    <atom:link href="https://blog.dotdot.cloud/categories/vm/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Home Assistant - Bin Collection Display and Notification</title>
      <link>https://blog.dotdot.cloud/2020/05/03/home-assistant-bin-collection-display-and-notification/</link>
      <pubDate>Sun, 03 May 2020 11:28:55 +0100</pubDate>
      <guid>https://blog.dotdot.cloud/2020/05/03/home-assistant-bin-collection-display-and-notification/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://blog.dotdot.cloud/2020/04/20/york-bins-api-and-home-assistant/&#34;&gt;Previously&lt;/a&gt; I had built a
&lt;a href=&#34;https://github.com/nigelm/york_bin_collection&#34;&gt;shim&lt;/a&gt; to make it much easier
to import data from the &lt;a href=&#34;https://data.yorkopendata.org/dataset/waste-collection-lookup&#34;&gt;York Bin Collections
API&lt;/a&gt; into &lt;a href=&#34;https://www.home-assistant.io/&#34;&gt;Home
Assistant&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I am making use of this data in two ways:-&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Making a display card in &lt;a href=&#34;https://www.home-assistant.io/lovelace/&#34;&gt;Lovelace&lt;/a&gt;
to display information about the next bin collection.&lt;/li&gt;
&lt;li&gt;Making a notification to prod me to put the right bins out.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;lovelace-display&#34;&gt;Lovelace Display&lt;/h2&gt;
&lt;p&gt;This is currently a prototype - and I need to spend more time on working out
exactly what I want from the Home Assistant display - I may move to building a
substantially minimised display for use with a spare Nook that I have - in a
similar way to &lt;a href=&#34;https://shkspr.mobi/blog/2020/02/turn-an-old-ereader-into-an-information-screen-nook-str/&#34;&gt;Turn an old eReader into an Information Screen (Nook
STR)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The display card looks like this &lt;img src=&#34;https://blog.dotdot.cloud/images/blog/2020/lovelace_bin_card.png&#34; alt=&#34;Lovelace Card&#34;&gt;&lt;/p&gt;
&lt;p&gt;And this is the result of adding a &lt;a href=&#34;https://www.home-assistant.io/lovelace/markdown/&#34;&gt;Markdown
card&lt;/a&gt;, setting the title to
&lt;code&gt;Bin Collection&lt;/code&gt; and filling the card in with some content.   The overall YAML
definition of the card (click the &lt;code&gt;Show Code Editor&lt;/code&gt; link on the card editor)
is:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;content&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;&amp;gt;2-&lt;/span&gt;
   {&lt;span style=&#34;color:#ae81ff&#34;&gt;% set bin = &amp;#39;sensor.bin_collection&amp;#39; %}&lt;/span&gt;
   {&lt;span style=&#34;color:#ae81ff&#34;&gt;% set nextdate = strptime(states(bin),&amp;#39;%Y-%m-%d&amp;#39;) %}&lt;/span&gt;

  &lt;span style=&#34;color:#ae81ff&#34;&gt;Next collection on {{ nextdate.strftime(&amp;#34;%A (%-d %B, %Y)  &amp;#34;) }} {%- if&lt;/span&gt;
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;blackbin&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;in state_attr(bin, &amp;#39;next_collection_types&amp;#39;) %}&amp;lt;ha-icon&lt;/span&gt;
  &lt;span style=&#34;color:#ae81ff&#34;&gt;icon=&amp;#34;mdi:delete&amp;#34;&amp;gt;&amp;lt;/ha-icon&amp;gt;{% endif %} {%- if &amp;#39;box&amp;#39; in state_attr(bin,&lt;/span&gt;
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;next_collection_types&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;) %}&amp;lt;ha-icon icon=&amp;#34;mdi:recycle&amp;#34;&amp;gt;&amp;lt;/ha-icon&amp;gt;{% endif %}&lt;/span&gt;
  {&lt;span style=&#34;color:#ae81ff&#34;&gt;%- if &amp;#39;greenbin&amp;#39; in state_attr(bin, &amp;#39;next_collection_types&amp;#39;) %}&amp;lt;ha-icon&lt;/span&gt;
  &lt;span style=&#34;color:#ae81ff&#34;&gt;icon=&amp;#34;mdi:pine-tree&amp;#34;&amp;gt;&amp;lt;/ha-icon&amp;gt;{% endif %}&lt;/span&gt;


  &lt;span style=&#34;color:#ae81ff&#34;&gt;Items collected:- {% for set in state_attr(bin, &amp;#39;next_collection_types&amp;#39;) %} {%&lt;/span&gt;
  &lt;span style=&#34;color:#ae81ff&#34;&gt;set thing = state_attr(bin, set) %}&lt;/span&gt;

  - {{ &lt;span style=&#34;color:#ae81ff&#34;&gt;thing.MaterialsCollected }} {% endfor %}&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;title&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Bin Collection&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;type&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;markdown&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;It is &lt;em&gt;incredibly&lt;/em&gt; sensitive to initial spacing and indents&amp;hellip;&lt;/p&gt;
&lt;p&gt;The first two lines of the content:-&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{% set bin = &#39;sensor.bin_collection&#39; %}
{% set nextdate = strptime(states(bin),&#39;%Y-%m-%d&#39;) %}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;set the initial config up.&lt;/p&gt;
&lt;p&gt;The next block outputs the next collection date in a reasonable format,
followed by icons for the appropriate bin type(s) - this is rather complex in
setting up the right icon to display.&lt;/p&gt;
&lt;p&gt;The final chunk lists the types of material being collected this week - it
iterates through the types of collection for this week, and pulls the
information this collection into the &lt;code&gt;thing&lt;/code&gt; variable.  Thats then used to
fill in the list elements.&lt;/p&gt;
&lt;p&gt;This chunk may well be made more detailed in the future, but for now its a
prototype, and theres a lot of other things than can be built on this should
someone desire a different presentation.&lt;/p&gt;
&lt;h2 id=&#34;bins-out-notification&#34;&gt;Bins Out Notification&lt;/h2&gt;
&lt;p&gt;The intention here was to send a nudge, on the evening before the bins are
collected, to remind me to put the appropriate bin out.&lt;/p&gt;
&lt;p&gt;Notifications in Home Assistant are most easily handled by an
&lt;a href=&#34;https://www.home-assistant.io/docs/automation/&#34;&gt;Automation&lt;/a&gt;. I tend to use
&lt;a href=&#34;https://pushover.net/&#34;&gt;Pushover&lt;/a&gt; notifications, but there are various other
&lt;a href=&#34;https://www.home-assistant.io/integrations/#notifications&#34;&gt;Home Assistant
Notifcations&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The complete automation used looks like this:-&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;- &lt;span style=&#34;color:#f92672&#34;&gt;id&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;1588360498442&amp;#39;&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;alias&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Bin Day Tomorrow Notification&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;description&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Tell me about bin day tomorrow&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;trigger&lt;/span&gt;:
  - &lt;span style=&#34;color:#f92672&#34;&gt;at&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;19:15&amp;#39;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;platform&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;time&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;condition&lt;/span&gt;:
  - &lt;span style=&#34;color:#f92672&#34;&gt;condition&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;template&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;value_template&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{{ as_timestamp(now())+86400 &amp;gt; as_timestamp(states(&amp;#39;&amp;#39;sensor.bin_collection&amp;#39;&amp;#39;))
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      }}&amp;#39;&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;action&lt;/span&gt;:
  - &lt;span style=&#34;color:#f92672&#34;&gt;data_template&lt;/span&gt;:
      &lt;span style=&#34;color:#f92672&#34;&gt;message&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{% set bin = &amp;#39;&amp;#39;sensor.bin_collection&amp;#39;&amp;#39; %}
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        Items collected:- {% for set in state_attr(bin, &amp;#39;&amp;#39;next_collection_types&amp;#39;&amp;#39;)
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        %} {% set thing = state_attr(bin, set) %}
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        - {{ thing.MaterialsCollected }} {% endfor %}
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        &amp;#39;&lt;/span&gt;
      &lt;span style=&#34;color:#f92672&#34;&gt;title&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Bin Day Tomorrow - {{ &amp;#39;, &amp;#39;.join(state_attr(&amp;#39;sensor.bin_collection&amp;#39;, &amp;#39;next_collection_types&amp;#39;))&lt;/span&gt;
        }}&lt;span style=&#34;color:#ae81ff&#34;&gt;.&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;service&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;notify.pushover&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;So this is an automation that runs every day at 19:15 (the &lt;code&gt;trigger:&lt;/code&gt;
section), with a condition to check if the collection is tomorrow (see if now
as a Unix timestamp with 1 days worth of seconds added, is greater than the
timestamp version of the bin collection date - this is in the &lt;code&gt;condition:&lt;/code&gt;
section).&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;action:&lt;/code&gt; section calls up the Pushover notification with a message and
title mostly based on the Lovelace card information shown above.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Minor Gardening</title>
      <link>https://blog.dotdot.cloud/2020/05/02/minor-gardening/</link>
      <pubDate>Sat, 02 May 2020 19:50:53 +0100</pubDate>
      <guid>https://blog.dotdot.cloud/2020/05/02/minor-gardening/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve done some tidying of the old posts - mostly this should have zero effect
on what you see, but the  Markdown has been tidied (line wraps added in to
make editing more comfortable), and any internal links should now be internal
rather than going back to the previous wordpress site.&lt;/p&gt;
&lt;p&gt;Now to actually add some current content&amp;hellip;&lt;/p&gt;
</description>
    </item>
    <item>
      <title>York Bins API and Home Assistant</title>
      <link>https://blog.dotdot.cloud/2020/04/20/york-bins-api-and-home-assistant/</link>
      <pubDate>Mon, 20 Apr 2020 17:05:43 +0100</pubDate>
      <guid>https://blog.dotdot.cloud/2020/04/20/york-bins-api-and-home-assistant/</guid>
      <description>&lt;p&gt;I have been using Home Assistant to automate various things at home.  One of
the things I thought would be useful was the ability for the system to inform
me of when the next bin collection is, and what sort of collection this would
be.&lt;/p&gt;
&lt;p&gt;Thankfully York Council has an API telling you about their bin collections.
This is documented at &lt;a href=&#34;https://data.yorkopendata.org/dataset/waste-collection-lookup&#34;&gt;York Waste Collection
Lookup&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;home-assistant-rest-sensors&#34;&gt;Home Assistant REST Sensors&lt;/h2&gt;
&lt;p&gt;Home Assistant helpfully can use REST sources as a sensor.  Unfortunately the
formatting of the data in the York API is not well arranged to be easy for
Home Assistant to use - in particular Home Assistant is not easily able to
handle returned data that is organised as an array of dictionaries.&lt;/p&gt;
&lt;p&gt;People have made use of this in the past - for example see &lt;a href=&#34;https://community.home-assistant.io/t/sorting-rest-sensors-by-date/96786&#34;&gt;this
example&lt;/a&gt;.
However this makes multiple calls to the API, which is unfriendly, and relies
on the API always returning its data in the same order in the array, which
appears to not be specified.&lt;/p&gt;
&lt;h2 id=&#34;python-command-line-shim-for-home-assistant&#34;&gt;Python Command Line Shim For Home Assistant&lt;/h2&gt;
&lt;p&gt;I decided it was better to put a shim in to pull the data from the API, do a
little processing on the data - specifically changing the date format into
something sane - and arrange these as a dictionary with some additional
overall collection data around it.&lt;/p&gt;
&lt;p&gt;This shim can be found in the Github repository at
&lt;a href=&#34;https://github.com/nigelm/york_bin_collection&#34;&gt;https://github.com/nigelm/york_bin_collection&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A sample of using it would look like:-&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;sensor&lt;/span&gt;:
  &lt;span style=&#34;color:#75715e&#34;&gt;# York Bins Collection API - 3 sets, 1 for each bin&lt;/span&gt;
  - &lt;span style=&#34;color:#f92672&#34;&gt;platform&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;command_line&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;command&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;/config/york_bin_collection.py 100050567115&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Bin Collection&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;scan_interval&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;86400&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;value_template&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{{ value_json.next_collection }}&amp;#39;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;json_attributes&lt;/span&gt;:
      - &lt;span style=&#34;color:#ae81ff&#34;&gt;next_collection&lt;/span&gt;
      - &lt;span style=&#34;color:#ae81ff&#34;&gt;next_collection_types&lt;/span&gt;
      - &lt;span style=&#34;color:#ae81ff&#34;&gt;blackbin&lt;/span&gt;
      - &lt;span style=&#34;color:#ae81ff&#34;&gt;greenbin&lt;/span&gt;
      - &lt;span style=&#34;color:#ae81ff&#34;&gt;box&lt;/span&gt;
      - &lt;span style=&#34;color:#ae81ff&#34;&gt;updated&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;and this would return the date of the next collection as the main value -
currently &lt;code&gt;2020-04-24&lt;/code&gt; - and the state attributes (reported as YAML) then
looks like:-&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;next_collection&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;2020-04-24&amp;#39;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;next_collection_types&lt;/span&gt;:
  - &lt;span style=&#34;color:#ae81ff&#34;&gt;blackbin&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;blackbin&lt;/span&gt;:
  &lt;span style=&#34;color:#f92672&#34;&gt;BinType&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;GREY 180&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;BinTypeDescription&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Grey Bin 180L&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;CollectionDay&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;FRI&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;CollectionDayFull&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Friday&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;CollectionDayOfWeek&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;CollectionFrequency&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Alternate Weeks&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;CollectionFrequencyShort&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;WEEK 2&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;CollectionPoint&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;FRONT&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;CollectionPointDescription&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Edge of Property at Front&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;CollectionPointLocation&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;null&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;CollectionType&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;GREY BIN/SACK&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;CollectionTypeDescription&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Grey Bin/Black Sack Collection&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;ImageName&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;blackbin&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;Locality&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;null&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;MaterialsCollected&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;General Domestic&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;NumberOfBins&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;1&amp;#39;&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;WasteType&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;GREY BIN/SACK&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;WasteTypeDescription&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Grey Bin/Black Sack Collection&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;last&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;2020-04-10&amp;#39;&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;next&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;2020-04-24&amp;#39;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;greenbin&lt;/span&gt;:
  &lt;span style=&#34;color:#f92672&#34;&gt;BinType&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;GREEN 180&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;BinTypeDescription&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Green Bin 180L&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;CollectionDay&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;FRI&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;CollectionDayFull&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Friday&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;CollectionDayOfWeek&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;CollectionFrequency&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Alternate Weeks&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;CollectionFrequencyShort&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;WEEK 1&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;CollectionPoint&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;FRONT&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;CollectionPointDescription&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Edge of Property at Front&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;CollectionPointLocation&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;null&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;CollectionType&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;GREEN&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;CollectionTypeDescription&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Green Collection&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;ImageName&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;greenbin&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;Locality&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;null&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;MaterialsCollected&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Garden Waste&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;NumberOfBins&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;1&amp;#39;&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;WasteType&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;GREEN&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;WasteTypeDescription&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Green Collection&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;last&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;2019-11-29&amp;#39;&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;next&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;null&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;box&lt;/span&gt;:
  &lt;span style=&#34;color:#f92672&#34;&gt;BinType&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;BOX 55&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;BinTypeDescription&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Box 55L&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;CollectionDay&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;FRI&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;CollectionDayFull&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Friday&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;CollectionDayOfWeek&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;CollectionFrequency&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Alternate Weeks&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;CollectionFrequencyShort&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;WEEK 1&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;CollectionPoint&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;FRONT&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;CollectionPointDescription&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Edge of Property at Front&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;CollectionPointLocation&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;null&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;CollectionType&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;KERBSIDE&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;CollectionTypeDescription&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Kerbside Collection&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;ImageName&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;box&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;Locality&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;null&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;MaterialsCollected: &amp;#39;Paper/Card : Plastic/Cans &lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Glass&amp;#39;&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;NumberOfBins&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;3&amp;#39;&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;WasteType&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;KERBSIDE&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;WasteTypeDescription&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Kerbside Collection&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;last&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;2020-04-17&amp;#39;&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;next&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;2020-05-01&amp;#39;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;updated&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;2020-04-20 16:25:55.918518&amp;#39;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;friendly_name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Bin Collection&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This data can then be used in other automations - thats what I am going to
look at next.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Relocation and Resurrection</title>
      <link>https://blog.dotdot.cloud/2020/04/18/relocation-and-resurrection/</link>
      <pubDate>Sat, 18 Apr 2020 00:00:00 +0000</pubDate>
      <guid>https://blog.dotdot.cloud/2020/04/18/relocation-and-resurrection/</guid>
      <description>&lt;p&gt;After a vastly long hiatus (the post 5 years back stating I intended to blog
more &lt;em&gt;really&lt;/em&gt; doesn&amp;rsquo;t count), I&amp;rsquo;ve finally put something together.&lt;/p&gt;
&lt;p&gt;Basically I have a batch of things I am trying out and so want to keep more
permanent notes on, hence bringing this back into play.&lt;/p&gt;
&lt;h2 id=&#34;hosting&#34;&gt;Hosting&lt;/h2&gt;
&lt;p&gt;Previously I put content onto &lt;code&gt;wordpress.com&lt;/code&gt; &amp;ndash; I certainly did not want to
get involved in actually managing the blogging platform.  However in the mean
time I have been using &lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt; for various thing, and it is
a much nicer system for me to work with, so moving to Hugo was an easy choice.&lt;/p&gt;
&lt;p&gt;Additionally I can now use &lt;a href=&#34;https://pages.github.com/&#34;&gt;Github Pages&lt;/a&gt; to host
the content (or various similar services).&lt;/p&gt;
&lt;p&gt;The old Wordpress content was dumped as an XML export and converted to
Markdown as described in &lt;a href=&#34;https://arjan.wooning.cz/conversion-tools-from-wordpress-to-hugo/#final-solution-exitwp-for-hugo&#34;&gt;Conversion tools from Wordpress to
Hugo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The theme is &lt;a href=&#34;https://themes.gohugo.io/hugo-flex/&#34;&gt;hugo-flex&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Now all I need to do is write more content.&lt;/p&gt;
</description>
    </item>
  </channel>
</rss>
